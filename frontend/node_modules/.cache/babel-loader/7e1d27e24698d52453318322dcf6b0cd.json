{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\"; // a slice is logic containing reducers and actions\n\nconst initialState = {\n  items: [],\n  status: null\n};\nexport const productsFetch = createAsyncThunk(\"products/productsFetch\", async () => {\n  const response = await axios.get(\"http://localhost:5000/products\"); //throw error if no data in response\n\n  return response === null || response === void 0 ? void 0 : response.data;\n});\nconst productsSlice = createSlice({\n  name: \"products\",\n  initialState,\n  reducers: {}\n});\nexport default productsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","items","status","productsFetch","response","get","data","productsSlice","name","reducers","reducer"],"sources":["C:/Users/ciosa/OneDrive/Desktop/Coding/reduxshoppingcart/frontend/src/features/productsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\n// a slice is logic containing reducers and actions\r\n\r\nconst initialState = {\r\n  items: [],\r\n  status: null,\r\n};\r\n\r\nexport const productsFetch = createAsyncThunk(\r\n  \"products/productsFetch\",\r\n  async () => {\r\n    const response = await axios.get(\"http://localhost:5000/products\");\r\n    //throw error if no data in response\r\n    return response?.data;\r\n  }\r\n);\r\n\r\nconst productsSlice = createSlice({\r\n  name: \"products\",\r\n  initialState,\r\n  reducers: {},\r\n});\r\n\r\nexport default productsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AAEA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EADY;EAEnBC,MAAM,EAAE;AAFW,CAArB;AAKA,OAAO,MAAMC,aAAa,GAAGL,gBAAgB,CAC3C,wBAD2C,EAE3C,YAAY;EACV,MAAMM,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAU,gCAAV,CAAvB,CADU,CAEV;;EACA,OAAOD,QAAP,aAAOA,QAAP,uBAAOA,QAAQ,CAAEE,IAAjB;AACD,CAN0C,CAAtC;AASP,MAAMC,aAAa,GAAGV,WAAW,CAAC;EAChCW,IAAI,EAAE,UAD0B;EAEhCR,YAFgC;EAGhCS,QAAQ,EAAE;AAHsB,CAAD,CAAjC;AAMA,eAAeF,aAAa,CAACG,OAA7B"},"metadata":{},"sourceType":"module"}